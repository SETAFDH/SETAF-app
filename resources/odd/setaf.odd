<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>SETAF</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref></p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="setaf.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2025-05-05+02:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="setaf" source="teipublisher.odd">
                <elementSpec ident="pb" mode="change"><model output="print" behaviour="block" cssClass="print-page"/><model predicate="@corresp" behaviour="webcomponent">
            <param name="name" value="'pb-facs-link'"/>
            <param name="facs" value="let $corresp := substring-after(@corresp, &#34;#&#34;) let $root := root($parameters?root) let $surface := $root//sourceDoc/surface  for $s in $surface  let $graphic := $s/graphic/@url  return     if($corresp = $s/@xml:id)      then replace($graphic, &#34;^[^:]+:(.*)&#34;, &#34;$1&#34;)     else()"/>
            <param name="emit" value="'transcription'"/>
        </model><model output="web" behaviour="webcomponent" cssClass="facs">
            <param name="name" value="'pb-facs-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="order" value="count($get(.)/preceding::pb) + 5"/>
            <param name="emit-on-load" value="'emit-on-load'"/>
            <param name="facs" value="'https://www.e-rara.ch/i3f/v20/165781/manifest'"/>
        </model></elementSpec>
            <elementSpec ident="teiHeader" mode="change"><modelSequence output="print">
            <model output="print" behaviour="block" cssClass="title-print">
                <param name="content" value=".//titleStmt/title"/>
            </model>
            <model output="print" behaviour="block" cssClass="metadata-print">
                <param name="content" value=".//publicationStmt/publisher || ' - ' || .//publicationStmt/authority"/>
            </model>
            <model output="print" behaviour="block" cssClass="citation-print">
                <param name="imprint" value=".//titleStmt/title"/>
                <param name="author" value="if (.//author/persName[1] = &#34;Anonyme&#34;)         then &#34;Anonyme. &#34;         else             if (.//author/persName[1][@role='presumed_author'])                  then '[' || .//author/persName[1]/surname || ' ' ||                  .//author/persName[1]/forename || ']. '              else .//author/persName[1]/surname || ' ' ||                  .//author/persName[1]/forename || '. '"/>
                <param name="role" value=".//respStmt/persName[@role=&#34;editor&#34;]"/>
                <pb:template xmlns="" xml:space="preserve"><span><b>Pour citer : </b>[[author]]  [[imprint]] Éd. [[role]] et al. Projet SETAF, dir. Daniela Solfaroli Camillocci.</span></pb:template>
            </model>
        </modelSequence><modelSequence output="web" predicate="$parameters?mode='gravure'">
            <desc>[Gravures] Metadata</desc>
            <model behaviour="block" cssClass="metadata">
                <desc>Title of the engraving</desc>
                <param name="content" value=".//p/figure/figDesc/title[@type=&#34;titre_gravure&#34;]/text()"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.title">Titre</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the source</desc>
                <param name="title" value=".//p/figure/figDesc/bibl/title"/>
                <param name="place" value=".//p/figure/figDesc/bibl/pubPlace"/>
                <param name="printer" value=".//p/figure/figDesc/bibl/publisher"/>
                <param name="date" value=".//p/figure/figDesc/bibl/date"/>
                <param name="page" value=".//p/figure/figDesc/locus"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Source</h1>
<span>[[title]]. [[place]] : [[printer]], [[date]], [[page]].</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the technique for the illustration</desc>
                <param name="content" value=".//p/figure/figDesc/objectType"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Technique</h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the dimensions of the image</desc>
                <param name="content" value=".//p/figure/figDesc/dim"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Dimensions</h1>
<span>[[content]] mm</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Title and marginalia</desc>
                <param name="title" value=".//p/figure/figDesc/title[@type=&#34;titre_courant&#34;]"/>
                <param name="manchette" value=".//p/figure/figDesc/title[@type=&#34;manchette&#34;]"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Inscriptions</h1>
<span>
  <pb-i18n key="metadata.title">Titre</pb-i18n> : [[title]] <br/>
  Manchette : [[manchette]]
</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Description of the image</desc>
                <param name="content" value=".//p/figure/note"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.desc">Description/Commentaire</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>References to GLN and USTC</desc>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.ref">Références</pb-i18n></h1>
<ul>
  <li><a href="https://www.ustc.ac.uk/editions/9746" target="_blank">USTC 9746</a></li>
  <li><a href="https://www.ville-ge.ch/musinfo/bd/bge/gln/notice/?no=GLN-1406" target="_blank">GLN-1406</a></li>
</ul></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Credits and licences</desc>
                <param name="url" value=".//p/figure/figDesc/bibl/@source"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.credits">Crédits</pb-i18n></h1>
<span>Genève, Musée historique de la Réformation (<a href="[[url]]" target="_blank">e-rara</a>)
<br/>Public Domain Mark
</span></pb:template>
            </model>
        </modelSequence><modelSequence output="web" predicate="$parameters?mode='infos'">
            <desc>[Corpus] Metadata</desc>
            <model behaviour="block" cssClass="metadata">
                <desc>SETAF identifier</desc>
                <param name="content" value="parent::TEI/@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.id">Identifiant SETAF</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Complete title of the work</desc>
                <param name="content" value=".//title[@type=&#34;complete_title&#34;]"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.title">Titre</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the author</desc>
                <param name="content" value="let $author := .//author/persName[1]  return if ($author[@role='presumed_author']) then '[' || $author/forename || ' ' || $author/surname || ']'   else $author/forename || ' ' || $author/surname"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.author">Auteur</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the printer</desc>
                <param name="content" value="let $printer := .//imprint/respStmt/persName[1]  return if ($printer[@role='presumed_printer']) then '[' || $printer/forename ||  ' ' || $printer/surname || ']'   else $printer/forename ||  ' ' || $printer/surname"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.printer">Imprimeur</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the publication place</desc>
                <param name="content" value="let $place := .//imprint/pubPlace[1]  return if ($place[@cert=&#34;low&#34;])    then '[' || $place || '?]' else if ($place[@cert=&#34;medium&#34;])    then '[' || $place || ']' else $place"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.place">Lieu</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the date of publication</desc>
                <param name="content" value="if (.//imprint/date[@cert='low']) then '[' || .//imprint/date || '?]'    else if (.//imprint/date[@cert='medium']) then '[' || .//imprint/date || ']'    else .//imprint/date"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Date</h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the format</desc>
                <param name="content" value=".//support/dim"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Format</h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the number of pages</desc>
                <param name="content" value=".//extent/measure[@unit='processed_images']/@n"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.pages">Pages ou feuillets</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about print signatures</desc>
                <param name="content" value=".//support/signatures"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Signatures</h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Localisation of the source</desc>
                <param name="city" value=".//msIdentifier/settlement/text()"/>
                <param name="institution" value=".//msIdentifier/institution/text()"/>
                <param name="shelfmark" value=".//msIdentifier/idno/text()"/>
                <param name="website" value=".//surrogates/bibl/relatedItem"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.copy">Exemplaire</pb-i18n></h1>
<span>[[city]], [[institution]], [[shelfmark]] ([[website]])</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about licences (text and images)</desc>
                <param name="content" value=".//additional//availability/p"/>
                <pb:template xmlns="" xml:space="preserve"><h1>Licences</h1>
<ul>[[content]]</ul></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the status of text transcription</desc>
                <param name="content" value="if (.//term[@type=&#34;transcription_quality&#34;]=&#34;gold&#34;) then &#34;Oui&#34; else &#34;Non&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.ocr">Correction de l'OCR</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Information about the status of text normalisation</desc>
                <param name="content" value="if (.//term[@type=&#34;intermediary_reg_quality&#34;]=&#34;gold&#34;) then &#34;Oui&#34; else &#34;Non&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.normalisation">Normalisation du texte</pb-i18n></h1>
<span>[[content]]</span></pb:template>
            </model>
            <model behaviour="block" cssClass="metadata">
                <desc>Bibliographical information</desc>
                <param name="content" value=".//additional//listBibl//ref"/>
                <pb:template xmlns="" xml:space="preserve"><h1><pb-i18n key="metadata.refBiblio">Références bibliographiques</pb-i18n></h1>
<ul>[[content]]</ul></pb:template>
            </model>
        </modelSequence><model output="latex" behaviour="metadata"/><model output="fo" behaviour="omit"/><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model output="web" behaviour="metadata"/></elementSpec><elementSpec ident="ref" mode="change"><model output="web" predicate="parent::note and @type=&#34;biblio&#34;" behaviour="inline">
            <desc>[For test only]</desc>
            <param name="content" value="let $biblio := tokenize(@target, &#34;#&#34;)  for $b in $biblio return $b"/>
            <pb:template xmlns="" xml:space="preserve">[[[content]]]</pb:template>
        </model><model predicate="parent::bibl[@type=&#34;canon&#34;]" behaviour="link" cssClass="canon">
            <desc>[Critical edition] Canon references</desc>
            <param name="uri" value="@target"/>
            <param name="target" value="'_blank'"/>
        </model><model predicate="parent::note[@type=&#34;editor&#34;]" behaviour="link" cssClass="canon">
            <param name="uri" value="@target"/>
            <param name="target" value="&#34;_blank&#34;"/>
        </model><model output="web" predicate="parent::relatedItem[@type=&#34;original&#34;]" behaviour="link">
            <param name="uri" value="ancestor::bibl/ref/@target"/>
            <param name="target" value="'_blank'"/>
        </model><model predicate="@target" behaviour="listItem">
            <param name="uri" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">[[content]]</a></pb:template>
        </model><model predicate="not(node())" behaviour="link">
            <param name="content" value="@target"/>
            <param name="uri" value="@target"/>
        </model><model behaviour="inline"/></elementSpec><elementSpec ident="p" mode="change"><model output="web" predicate="ancestor::additional" behaviour="listItem">
            <desc>Specifity of the metadata (category "Licences")</desc>
        </model><model output="print" predicate="ancestor::note" behaviour="inline"/><model behaviour="paragraph" cssClass="para-ed-crit" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec><elementSpec ident="persName" mode="add"><model output="print" behaviour="inline">
            <desc>[Critical edition] Specific model for print preview</desc>
        </model><model output="web" predicate="parent::reg[@type=&#34;intermediary&#34;]" behaviour="alternate" cssClass="persName">
            <param name="default" value="."/>
            <param name="alternate" value="let $key := substring-after(@key, &#34;#&#34;)  let $index := doc(&#34;/db/apps/setaf-data/data/registers/persons.xml&#34;)  let $id := $index//person/@xml:id   return   if($key = $id)    then        let $person := $index//person[@xml:id=$key]       return       &lt;div&gt;           &lt;p&gt;{$person/persName} ({$person/name})&lt;/p&gt;           &lt;p&gt;{$person/birth} - {$person/death}&lt;/p&gt;           &lt;p&gt;{$person/note[1]}&lt;/p&gt;       &lt;/div&gt;   else(&#34;En cours&#34;)"/>
        </model></elementSpec><elementSpec ident="note" mode="change"><model output="web" predicate="parent::person" behaviour="inline">
            <desc>[Critical edition] Person index</desc>
        </model><model output="print" predicate="@type=&#34;editor&#34;" behaviour="note"/><model output="print" predicate="@type=&#34;MarginTextZone:handwrittenAddition&#34;" behaviour="omit"/><model output="print" predicate="ancestor::p" behaviour="inline" cssClass="notes"/><model output="print" behaviour="block" cssClass="notes"/><model predicate="@type=&#34;TableZone&#34;" behaviour="block"/><model output="web" predicate="parent::figure" behaviour="inline">
            <desc>Model for the description of the illustration</desc>
        </model><model predicate="@type=&#34;MarginTextZone:handwrittenAddition&#34;" behaviour="omit"/><model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model></elementSpec><elementSpec ident="hi" mode="change"><model output="web" predicate="./lb[@type=&#34;HeadingLine&#34;]" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="child::lb[@type=&#34;DropCapitalLine&#34;]" behaviour="inline" cssClass="lettrine">
            <desc>Règles pour l'affichage des lettrines</desc>
        </model><model behaviour="inline" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec><elementSpec ident="choice" mode="change"><model behaviour="inline"/></elementSpec><elementSpec ident="orig" mode="add"><model output="print" behaviour="omit">
            <desc>Hide for print preview</desc>
        </model><model output="fo" behaviour="omit">
            <desc>Hide when downloading PDF</desc>
        </model><model output="web" predicate="$parameters?view='modern'" behaviour="omit">
            <desc>[Critical edition] Hide the original text when the modern view is activated</desc>
        </model><model output="web" predicate="$parameters?view='intermediary'" behaviour="omit">
            <desc>[Critical edition] Hide the original text when the intermediary view is activated</desc>
        </model><model output="web" predicate="$parameters?view='original_crit'" behaviour="inline">
            <desc>[Critical edition] Display the original text</desc>
        </model><model output="web" predicate="$parameters?view='normalized'" behaviour="omit">
            <desc>[Corpus] Hide original text when the "normalized" view is activated</desc>
        </model><model output="web" predicate="$parameters?view='original'" behaviour="inline">
            <desc>[Corpus] Display the original text</desc>
        </model></elementSpec><elementSpec ident="reg" mode="add"><modelSequence output="web" predicate="$parameters?view='modern'">
            <desc>[Critical edition] Parameters for the modern view</desc>
            <model predicate="@type=&#34;contemporary&#34;" behaviour="inline"/>
            <model predicate="@type=&#34;intermediary&#34;" behaviour="omit"/>
        </modelSequence><modelSequence output="web" predicate="$parameters?view='original_crit'">
            <desc>[Critical edition] Hide intermediary and contemporary lines when the original view is activated</desc>
            <model predicate="@type=&#34;intermediary&#34;" behaviour="omit"/>
            <model predicate="@type=&#34;contemporary&#34;" behaviour="omit"/>
        </modelSequence><modelSequence output="web" predicate="$parameters?view='intermediary'">
            <desc>[Critical edition] Parameters for the intermediary view</desc>
            <model predicate="@type=&#34;intermediary&#34;" behaviour="inline"/>
            <model predicate="@type=&#34;contemporary&#34;" behaviour="omit"/>
        </modelSequence><model output="print" predicate="@type=&#34;advanced&#34; or @type=&#34;contemporary&#34;" behaviour="omit">
            <desc>Hide for print preview</desc>
        </model><model output="fo" predicate="@type=&#34;advanced&#34;" behaviour="omit"/><model predicate="$parameters?view='original'" behaviour="omit">
            <desc>Hide the "normalised" text when the original view is activated</desc>
        </model><modelSequence output="web" predicate="$parameters?view='normalized'">
            <desc>Only show the "intermediary" line when the normalised view is activated</desc>
            <model predicate="@type=&#34;intermediary&#34;" behaviour="inline"/>
            <model predicate="@type=&#34;advanced&#34;" behaviour="omit"/>
        </modelSequence></elementSpec><elementSpec ident="fw" mode="change"><model predicate="@type=&#34;QuireMarksZone&#34;" behaviour="block" cssClass="float"/><model predicate="ancestor::p or ancestor::ab" behaviour="inline"/><model behaviour="block"/></elementSpec><elementSpec ident="sourceDoc" mode="add"><model output="print" behaviour="omit"/><model output="fo" behaviour="omit">
            <desc>Important for PDF export (prevent PDF download if not omit)</desc>
        </model></elementSpec><elementSpec ident="fileDesc" mode="change"><modelSequence output="web" predicate="$parameters?header='short'">
            <desc>Display the metadata on index.html</desc>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value=".//monogr/title[@type=&#34;short_title&#34;]"/>
            </model>
            <model behaviour="block">
                <param name="content" value="let $author := .//author/persName[1]  return if ($author[@role='presumed_author']) then '[' || $author/forename || ' ' || $author/surname || ']'   else $author/forename || ' ' || $author/surname"/>
            </model>
            <model behaviour="block">
                <param name="place" value="let $place := .//imprint/pubPlace[1]  return if ($place[@cert=&#34;low&#34;])    then '[' || $place || '?]' else if ($place[@cert=&#34;medium&#34;])    then '[' || $place || ']' else $place"/>
                <param name="printer" value="let $printer := .//imprint/respStmt/persName[1]  return if ($printer[@role='presumed_printer']) then '[' || $printer/forename ||  ' ' || $printer/surname || ']'   else $printer/forename ||  ' ' || $printer/surname"/>
                <param name="date" value="if (.//imprint/date[@cert='low']) then '[' || .//imprint/date || '?]'    else if (.//imprint/date[@cert='medium']) then '[' || .//imprint/date || ']'    else .//imprint/date"/>
                <pb:template xmlns="" xml:space="preserve">[[place]] : [[printer]], [[date]]</pb:template>
            </model>
            <model behaviour="link" cssClass="thumbnail">
                <param name="content" value="substring-after(./parent::teiHeader/following-sibling::sourceDoc/surface[1]/graphic/@url, ':') || '/full/100,/0/default.jpg'"/>
                <param name="uri" value="$parameters?doc"/>
                <pb:template xmlns="" xml:space="preserve"><img src="[[content]]"/></pb:template>
            </model>
        </modelSequence><model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model></elementSpec><elementSpec ident="title" mode="change"><model predicate="$parameters?header='short'" behaviour="link">
            <param name="uri" value="$parameters?doc"/>
        </model><model predicate="not(@level) and parent::bibl" behaviour="inline"/><model behaviour="inline"/></elementSpec><elementSpec ident="titleStmt" mode="change"><model output="fo" behaviour="heading"/><model predicate="$parameters?mode='title'" behaviour="heading" cssClass="title-corpus">
            <desc>Title displayed on the editions' pages</desc>
            <param name="content" value="title[not(@type)]"/>
            <param name="level" value="5"/>
        </model><modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subsequence(title, 2)"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence><model output="web" behaviour="block"/></elementSpec><elementSpec ident="head" mode="change"><model predicate="parent::div[@type=&#34;MainZone&#34;]" behaviour="heading" cssClass="title-faits">
            <desc>[Critical edition] Titles</desc>
            <param name="level" value="2"/>
        </model><model predicate="@type=&#34;static_main_title&#34;" behaviour="heading" cssClass="static-title">
            <param name="level" value="1"/>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model><model behaviour="block"/></elementSpec><elementSpec ident="graphic" mode="change"><model output="web" predicate="ancestor::body[@xml:id=&#34;static&#34;]" behaviour="inline">
            <param name="url" value="@url"/>
            <param name="height" value="substring-before(@height, &#34;p&#34;)"/>
            <pb:template xmlns="" xml:space="preserve"><img src="[[url]]" height="[[height]]" alt="" role="presentation"/></pb:template>
        </model><model output="web" behaviour="block" cssClass="engraving-faits">
            <desc>[Critical edition] Images of the engravings</desc>
            <param name="url" value="&#34;https://www.e-rara.ch/i3f/v20&#34; || @url"/>
            <param name="alt" value="following-sibling::figDesc"/>
            <param name="engraving" value="&#34;../gravures/&#34; || @corresp || &#34;.xml&#34;"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[engraving]]" target="_blank"><img src="[[url]]" alt="[[alt]]" width="300"/></a></pb:template>
        </model></elementSpec><elementSpec ident="ab" mode="change"><model output="print" behaviour="block" cssClass="ab-print"/><model behaviour="paragraph"/></elementSpec><elementSpec ident="bibl" mode="change"><model predicate="@ana" behaviour="inline" cssClass="biblical-ref">
            <desc>[Critical edition] Inline biblical references</desc>
            <param name="ref" value="@ana"/>
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve"><span>[[content]]</span> <span class="ref"> [[ref]]</span></pb:template>
        </model><model output="web" predicate="ancestor::body[@xml:id=&#34;static&#34;]" behaviour="link" cssClass="static-link">
            <desc>Références bibliographiques pour les pages statiques</desc>
            <param name="uri" value="&#34;../bibliographie.html&#34; || @corresp"/>
        </model><model predicate="parent::listBibl" behaviour="listItem"/><model behaviour="inline"/></elementSpec><elementSpec ident="figDesc" mode="add"><model behaviour="omit"/></elementSpec><elementSpec ident="term" mode="add"><model output="print" behaviour="inline"/><model output="web" predicate="parent::item" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight:bold;
            </outputRendition>
        </model><model output="web" predicate="parent::reg" behaviour="alternate" cssClass="terme-glossaire">
            <desc>[Critical edition] Infobox about terms</desc>
            <param name="default" value="."/>
            <param name="alternate" value="let $key := substring-after(@key, &#34;#&#34;) let $index := doc(&#34;/db/apps/setaf-data/data/registers/glossaire.xml&#34;) let $id := $index//item/@xml:id return   if($key = $id)   then $index//item[@xml:id=$key]   else(&#34;En cours&#34;)"/>
        </model></elementSpec><elementSpec ident="item" mode="change"><model output="web" predicate="parent::list[@type=&#34;index&#34;]" behaviour="block"/><model behaviour="listItem"/></elementSpec></schemaSpec>
        </body>
    </text></TEI>